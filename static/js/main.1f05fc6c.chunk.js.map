{"version":3,"sources":["pages/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleList/PeopleList.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/NavLinkItem/NavLinkItem.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","to","slug","classNames","sex","name","PeopleList","React","useState","isLoading","setIsLoading","error","setError","people","setPeople","personSlug","useParams","useEffect","peopleFromServer","peopleWithParents","map","mother","find","personMother","motherName","father","personFather","fatherName","catch","finally","successLoad","length","born","died","PeoplePage","NotFoundPage","NavLinkItem","title","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1f05fc6c.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n\n  >\n    {person.name}\n  </Link>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport const PeopleList: React.FC = () => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [error, setError] = React.useState<string | null>(null);\n  const [people, setPeople] = React.useState<Person[]>([]);\n\n  const { personSlug } = useParams();\n\n  React.useEffect(() => {\n    getPeople()\n      .then((peopleFromServer) => {\n        const peopleWithParents = peopleFromServer.map((person) => {\n          const mother = peopleFromServer.find(\n            (personMother) => personMother.name === person.motherName,\n          );\n\n          const father = peopleFromServer.find(\n            (personFather) => personFather.name === person.fatherName,\n          );\n\n          return {\n            ...person,\n            mother,\n            father,\n          };\n        });\n\n        setPeople(peopleWithParents);\n      })\n      .catch(() => {\n        setError('Something went wrong');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const successLoad = !isLoading && !error;\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {isLoading && <Loader />}\n\n        {error && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            {error}\n          </p>\n        )}\n\n        {!people.length && successLoad && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {people.length > 0 && successLoad && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map((person) => (\n                <tr\n                  data-cy=\"person\"\n                  className={classNames({\n                    'has-background-warning': personSlug === person.slug,\n                  })}\n                >\n                  <td>\n                    <PersonLink person={person} />\n                  </td>\n\n                  <td>{person.sex}</td>\n                  <td>{person.born}</td>\n                  <td>{person.died}</td>\n\n                  <td>\n                    {person.mother && (<PersonLink person={person.mother} />)}\n                    {person.motherName && !person.mother && (\n                      <p>{person.motherName}</p>\n                    )}\n                    {!person.motherName && !person.mother && ('-')}\n                  </td>\n\n                  <td>\n                    {person.father && (<PersonLink person={person.father} />)}\n                    {person.fatherName && !person.father && (\n                      <p>{person.fatherName}</p>\n                    )}\n                    {!person.fatherName && !person.father && ('-')}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { PeopleList } from '../components/PeopleList/PeopleList';\n\nexport const PeoplePage: React.FC = () => (\n  <>\n    <h1 className=\"title\">People Page</h1>\n\n    <PeopleList />\n  </>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const NavLinkItem: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {title}\n  </NavLink>\n);\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { NavLinkItem } from './components/NavLinkItem/NavLinkItem';\n\nexport const App: React.FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLinkItem to=\"/\" title=\"Home\" />\n\n          <NavLinkItem to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"/Home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}