{"version":3,"sources":["pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","components/NavLinkItem/NavLinkItem.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","classNames","sex","name","PersonRow","cn","born","died","mother","motherName","father","fatherName","PeopleTable","people","useParams","map","PeoplePage","useState","isLoading","setIsLoading","error","setError","setPeople","fetchData","peopleFromServer","peopleWithParents","find","personMother","personFather","useEffect","successLoad","length","NotFoundPage","NavLinkItem","title","isActive","App","role","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.88f28b6f.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n\n  >\n    {person.name}\n  </Link>\n);\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n  slug: string | undefined;\n}\n\nexport const PersonRow: FC<Props> = ({ person, slug }) => (\n  <tr\n    key={person.slug}\n    data-cy=\"person\"\n    className={cn({\n      'has-background-warning': slug === person.slug,\n    })}\n  >\n    <td>\n      <PersonLink person={person} />\n    </td>\n\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n\n    <td>\n      {person.mother && (<PersonLink person={person.mother} />)}\n      {person.motherName && !person.mother && (\n        <p>{person.motherName}</p>\n      )}\n      {!person.motherName && !person.mother && ('-')}\n    </td>\n\n    <td>\n      {person.father && (<PersonLink person={person.father} />)}\n      {person.fatherName && !person.father && (\n        <p>{person.fatherName}</p>\n      )}\n      {!person.fatherName && !person.father && ('-')}\n    </td>\n  </tr>\n);\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonRow person={person} slug={slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  const fetchData = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      const peopleWithParents = peopleFromServer.map((person) => {\n        const mother = peopleFromServer.find(\n          (personMother) => personMother.name === person.motherName,\n        );\n\n        const father = peopleFromServer.find(\n          (personFather) => personFather.name === person.fatherName,\n        );\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n\n      setPeople(peopleWithParents);\n    } catch (errorMessage) {\n      setError('Something went wrong');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const successLoad = !isLoading && !error;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {error}\n            </p>\n          )}\n\n          {!people.length && successLoad && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && successLoad && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  title: string;\n};\n\nexport const NavLinkItem: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={to}\n  >\n    {title}\n  </NavLink>\n);\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { FC } from 'react';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { NavLinkItem } from './components/NavLinkItem/NavLinkItem';\n\nexport const App: FC = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLinkItem to=\"/\" title=\"Home\" />\n\n          <NavLinkItem to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"/Home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}